[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MYE References",
    "section": "",
    "text": "This is a collection of information and links in one place so it’s easier to look up.\n\n\n\nLast updated: 2022-07-13 22:39:36"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "1  Resources",
    "section": "",
    "text": "Fundamentals of Data Visualization; GitHub\nggplot2\nAdvanced R\nR for Data Science\nR Markdown: The Definitive Guide\nR Markdown Cookbook\nR Packages\nMastering Shiny\nMastering Shiny\nMethods for Network Analysis\ntidyverse style guide"
  },
  {
    "objectID": "resources.html#documentation-pages",
    "href": "resources.html#documentation-pages",
    "title": "1  Resources",
    "section": "1.2 Documentation Pages",
    "text": "1.2 Documentation Pages\n\n{dplyr}::mutate_##\n{dplyr}::mutate\n{DT}\n{ggpattern}\n{kableExtra} HTML tables\n{stringr} From base R WAYBACK\n{sf} shape files\n{shinyWidgets}\n{styler}\n{pkgdown}\n{shiny}"
  },
  {
    "objectID": "resources.html#cheat-sheets",
    "href": "resources.html#cheat-sheets",
    "title": "1  Resources",
    "section": "1.3 Cheat Sheets",
    "text": "1.3 Cheat Sheets\n\nRStudio cheatsheets\n{data.table}"
  },
  {
    "objectID": "resources.html#conferences",
    "href": "resources.html#conferences",
    "title": "1  Resources",
    "section": "1.4 Conferences",
    "text": "1.4 Conferences\n\n2021 Nobel Conference Big Data Revolution, talks\nR: Conferences\nrstudio::conf(2022)\nrstudio::global 2021, talks"
  },
  {
    "objectID": "R.html",
    "href": "R.html",
    "title": "R",
    "section": "",
    "text": "Specifically regarding R code"
  },
  {
    "objectID": "R_datamanage.html",
    "href": "R_datamanage.html",
    "title": "2  Data Management",
    "section": "",
    "text": "waldo::compare(c(\"a\", \"b\", \"c\"), c(\"a\", \"b\"))\n\n`old`: \"a\" \"b\" \"c\"\n`new`: \"a\" \"b\"    \n\ndf1 <- data.frame(x = 1:3, y = 3:1)\ndf2 <- tibble::tibble(rev(df1))\nwaldo::compare(df1, df2)\n\n`class(old)`: \"data.frame\"                   \n`class(new)`: \"tbl_df\"     \"tbl\" \"data.frame\"\n\n`names(old)`: \"x\" \"y\"\n`names(new)`: \"y\" \"x\"\n\n\n\n\n\n\nx <- c(1,2,3,4)\ny <- c(2,3,4)\nsetdiff(x, y)\n\n[1] 1\n\n\n\nSource: Stack Overflow, Dec 2012 | how to tell what is in one vector and not another"
  },
  {
    "objectID": "R_datamanage.html#quick-qa",
    "href": "R_datamanage.html#quick-qa",
    "title": "2  Data Management",
    "section": "2.2 Quick Q&A",
    "text": "2.2 Quick Q&A\n\n2.2.1 replacement for plyr::rbind.fill\ndplyr::bind_rows()\n\n\nSource: Stack Overflow, Jun 2017 | good replacement for plyr::rbind.fill\n\n\n\n2.2.2 Set colnames in pipe\ndf %>% `colnames<-` newnames\n\n\nSource: Stack Overflow, Mar 2016 | how to set row names of data frame passed on with the pipe operator\n\n\ncolnames(cars)\n\n[1] \"speed\" \"dist\" \n\ncars |> `colnames<-`(c(\"one\", \"two\")) |> head()\n\n  one two\n1   4   2\n2   4  10\n3   7   4\n4   7  22\n5   8  16\n6   9  10\n\n\n\n\n2.2.3 Remove Columns by Var Type\ndf[,-which(sapply(df, class) == \"factor\")]\ndf[, sapply(df, class) != \"factor\"]\ndf[,sapply(df, is.numeric)]\n\n\nSource: Stack Overflow, Mar 2015 | how to remove columns for a data frame by data type;"
  },
  {
    "objectID": "R_datamanage.html#links",
    "href": "R_datamanage.html#links",
    "title": "2  Data Management",
    "section": "2.3 Links",
    "text": "2.3 Links\n\nStack Overflow, Oct 2019 | using strsplit in a tibble column\nStack Overflow, Dec 2014 | Assign variable labels of data frame columns\nStack Overflow, Mar 2017 | using strsplit and subset in dplyr and mutate\n\nStack Overflow, May 2013 | add a dplyr group label as a number\nGitHub {bigrquery}, Apr 2018 | Can’t join across sources · Issue #219"
  },
  {
    "objectID": "R_dataviz.html",
    "href": "R_dataviz.html",
    "title": "3  Data Viz",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "R_dataviz.html#axis-breaks",
    "href": "R_dataviz.html#axis-breaks",
    "title": "3  Data Viz",
    "section": "3.1 Axis Breaks",
    "text": "3.1 Axis Breaks\n\n3.1.1 {ggbreak}\n\ndf <- data.frame(a = c(1,2,3,500), b = c('a1', 'a2','a3', 'a4'))\n\nggplot(df) + \n  aes(x = b, y = a) +\n  geom_col() +\n  ggbreak::scale_y_break(c(5, 490))\n\n\n\n\n\nSource: {ggbreak} | Set Axis Break for ggplot2\n\n\n\n3.1.2 {ggforce}::facet_zoom\n\ndf <- data.frame(a = c(1,2,3,500), b = c('a1', 'a2','a3', 'a4'))\n\nggplot(df) + \n  aes(x = b, y = a) +\n  geom_col() +\n  ggforce::facet_zoom(ylim = c(0, 5))\n\n\n\n\n\nSource: Stack Overflow, Sep 2011 | Using ggplot2, can I insert a break in the axis?"
  },
  {
    "objectID": "R_dataviz.html#annotation-outside-panel",
    "href": "R_dataviz.html#annotation-outside-panel",
    "title": "3  Data Viz",
    "section": "3.2 Annotation outside panel",
    "text": "3.2 Annotation outside panel\nThe one time I’ve done this is to add a axis break symbol for when the y axis does not start at zero. In addition to adding the symbol, you also have to set the ggplotGrob to not clip items outside the plot panel.\n\nbase <- mpg %>% \n  ggplot(aes(x = cty, y = hwy)) + \n  geom_point() + \n  lims(x = c(0, NA)) + \n  theme_minimal() + \n  theme(axis.line = element_line(color = \"grey35\", size = 0.25))\n\np.zoomin <- base + \n  annotate(\"text\"\n    , x = -Inf, y = -Inf #bottom left corner of plot \n    , label = \"\\u2e17\"   #symbol ⸗ (diag double hyphen)\n    , color = \"grey35\"   #same color as axis.line\n    , size = 4.5         #adjust based on out plot size\n    , vjust = -0.25      #adjust further up \n  ) \n\n#get grob instructions \ng.zoomin <- ggplotGrob(p.zoomin) \n\n#turn panel clipping off \ng.zoomin$layout$clip[g.zoomin$layout$name == \"panel\"] = \"off\"\n\n#draw final \ncowplot::ggdraw(\n  cowplot::add_sub(\n    g.zoomin\n    , \"'broken axis' symbol, also extra note under plot\"\n    , size = 12\n    , x = 0\n    , hjust = 0\n    #, y = 1.25 #same line as x axis title \n  ))\n\n\n\n\n\nSources: Stack Overflow, Mar 2014 | set layout clip to ‘off’ and {cowplot}::add_sub | add annotation under plot"
  },
  {
    "objectID": "R_dataviz.html#secondary-legend",
    "href": "R_dataviz.html#secondary-legend",
    "title": "3  Data Viz",
    "section": "3.3 Secondary Legend",
    "text": "3.3 Secondary Legend\n\n3.3.1 NA Legend\nAdded automatically if NA is part of discrete legend, but is NOT included automatically for continuous legend.\n\nset.seed(20220713)\nstates_sf <- urbnmapr::get_urbn_map(map = \"states\", sf = TRUE) %>% \n  #set new CRS \n  sf::st_transform(states_sf, crs = 4326) %>% \n  mutate(\n      val_dis = sample(c(\"A\", \"B\", \"C\"), nrow(.), TRUE)\n    , val_con = sample(-50:50          , nrow(.), TRUE)\n  ) %>% \n  mutate(\n      val_dis = ifelse(state_abbv == \"MN\", NA, val_dis)\n    , val_con = ifelse(state_abbv == \"MN\", NA, val_con)\n  )\n\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n\nggplot(states_sf) + geom_sf(aes(fill = val_dis))\n\n\n\nggplot(states_sf) + geom_sf(aes(fill = val_con))\n\n\n\n\nAdd NA legend to continuous plot:\n\nggplot(states_sf) + \n  geom_sf(aes(fill = val_con, color = \"\")) + \n  scale_fill_continuous(na.value = \"grey40\") + \n  scale_color_manual(values = NA) + \n  guides(\n      color = guide_legend(\"NA\", override.aes = list(fill = \"grey40\"))\n    , fill = guide_colorbar(order = 1)\n  ) \n\n\n\n\n\nSource: Stack Overflow, Mar 2017 | Add a box for NA values for continuous map\n\n\n\n3.3.2 2+ Special Values\n\nlibrary(cowplot) \n\n#special value for 'suppressed' data\nstates_sf <- states_sf %>% \n  mutate(val_con = ifelse(state_abbv == \"CA\", 999, val_con))\n\n## Main Plot \np.main <- ggplot(states_sf) + \n  geom_sf( # non-special values, typical cont. color bar \n    data = filter(states_sf, val_con != 999 & !is.na(val_con))\n    , aes(fill = val_con), color = NA\n  ) + \n  geom_sf( # NA states (missing data) \n    data = filter(states_sf, is.na(val_con))\n    , fill = \"grey30\", color = NA\n  ) + \n  geom_sf( # Special values (suppressed data) \n    data = filter(states_sf, val_con == 999)\n    , fill = \"grey80\", color = NA\n  ) + \n  geom_sf( # add borders for all \n    fill = NA, color = \"white\"\n  ) \n\n## Dummy Plot for 2nd Legend \np.missup <- tibble(val = c(0, 1), type = c(\"Missing\", \"Suppressed\")) %>% \n  ggplot() + \n  geom_bar(aes(val, fill = type)) + \n  scale_fill_manual(name = NULL\n    , values = c(\"grey30\", \"grey80\")\n    , guide = guide_legend( byrow = TRUE)\n  ) + \n  theme(legend.spacing.y = unit(5, \"pt\"))\n\n## Pull out legends and combine \nleg.main <- cowplot::get_legend(p.main)\nleg.sec  <- cowplot::get_legend(p.missup)\nleg.final <- cowplot::plot_grid(leg.main, leg.sec, ncol = 1, align = \"v\") \n\n## Remvoe main legend from plot \np.final  <- p.main  + theme(legend.position = \"none\") \n\n## Combined everything \ncowplot::plot_grid(p.final, leg.final, nrow = 1, rel_widths = c(4, 1))\n\n\n\n\n\nQuick Link: Stack Overflow, Sep 2018 | Use cowplot for custom multiple legends arrangement\n\nOUTSTANDING\n\nhow to minimize space between main legend and secondary legend\ngrid::grid.draw(rbind(leg.main, leg.sec)) binds together without huge space, but need to figure out how to add to another ggplot item"
  },
  {
    "objectID": "R_dataviz.html#hjustvjust",
    "href": "R_dataviz.html#hjustvjust",
    "title": "3  Data Viz",
    "section": "3.4 hjust/vjust",
    "text": "3.4 hjust/vjust\nWhy do I always forget the direction of these?\nhjust: 0 = left-aligned, 0.5=center, 1 = right-aligned\nvjust: 0 = top-aligned, 0.5=middle, 1 = bottom-aligned\n\nhjustvjust <- expand.grid(\n  hjust=c(0, 0.5, 1),\n  vjust=c(0, 0.5, 1),\n  angle=c(0, 45, 90),\n  text=\"TEXT\")\n\nggplot(hjustvjust, aes(x=hjust, y=vjust)) + \n  geom_point() +\n  geom_text(aes(label=text, angle=angle, hjust=hjust, vjust=vjust)) + \n  facet_grid(~angle) +\n  scale_x_continuous(breaks=c(0, 0.5, 1), expand=c(0, 0.2)) +\n  scale_y_continuous(breaks=c(0, 0.5, 1), expand=c(0, 0.2)) + \n  labs(\n    title=\"Various values of angle, hjust and vjust in ggplot \\n\"\n    , y =\"vjust \\n\"\n    , x =\" \\n hjust\"\n  ) +  \n  theme_bw() + \n  theme(\n    axis.text  = element_text(color=\"black\", face=\"bold\" , size=12)\n  , axis.title = element_text(color=\"black\", face=\"plain\", size=24)\n  , plot.title = element_text(color=\"black\", face=\"bold\" , size=18)\n  ) \n\n\n\n\n\nSources: R bloggers, Nov 2012 | hjust and vjust and GitHub: cdesante/hjustvjust.r"
  },
  {
    "objectID": "R_dataviz.html#math-expressions",
    "href": "R_dataviz.html#math-expressions",
    "title": "3  Data Viz",
    "section": "3.5 Math Expressions",
    "text": "3.5 Math Expressions\n\n3.5.1 Use quote()\n\nggplot(mpg, aes(displ, hwy))+geom_point()+\n  ggtitle(\n    quote(\n      alpha ^ 2 - frac(1, 10) + sum(n[i], i==1, N)\n    ) #end quote\n  ) #end of ggtitle\n\n\n\n\n\n\n3.5.2 Use TeX() from the latex2exp package\n\nmust be in a string\nmust be denoted as math mode with dollar signs\nmust include 2 backslashes for \\(\\LaTeX\\) commands\n\n\nlibrary(latex2exp)\nggplot(mpg, aes(displ, hwy))+geom_point()+\n  ggtitle(TeX(\n    \"$\\\\alpha^2 - \\\\frac{1}{10} + \\\\sum_{i}^N n_i$\"\n    ) #end TeX\n  ) #end ggtitle"
  },
  {
    "objectID": "R_dataviz.html#facets-scalesspace",
    "href": "R_dataviz.html#facets-scalesspace",
    "title": "3  Data Viz",
    "section": "3.6 Facets: scales/space",
    "text": "3.6 Facets: scales/space\nAnother option is facet_wrap() or facet_grid(), which can works if the axes are the same for the different variables you want to compare, but be careful as facets are supposed to be comparing items with the same measurements.\n\ntidy.df <- tidyr::pivot_longer(\n  mpg, c(class, drv)\n  , names_to = \"category\"\n  , values_to = \"type\"\n)\n\nscales = \"free\": removes types from the axis if that category has 0 cars of that type\n\nggplot(tidy.df, aes(type)) +\n  geom_bar() + coord_flip() + \n  facet_wrap(~category,  ncol = 1, scales = \"fixed\") + \n  labs(title = 'facet_wrap: scales = \"fixed\"')\nggplot(tidy.df, aes(type)) +\n  geom_bar() + coord_flip() + \n  facet_wrap(~category,  ncol = 1, scales = \"free\") + \n  labs(title = 'facet_wrap: scales = \"free\"')\n\n\n\n\n\n\n\n\n\n\n\nspace = \"free\": spaces based on number of obs (i.e. number of bars); rather than giving each facet equal sizing, ONLY available for facet_grid\n\nggplot(tidy.df, aes(type)) +\n  geom_bar() + coord_flip() + \n  facet_grid(category ~ ., scales = \"fixed\" , space  = \"fixed\") + \n  labs(title = 'facet_grid: scales = \"fixed\" and space = \"fixed\"')\nggplot(tidy.df, aes(type)) +\n  geom_bar() + coord_flip() + \n  facet_grid(category ~ ., scales = \"free\" , space  = \"free\") + \n  labs(title = 'facet_grid: scales = \"free\" and space = \"free\"')"
  },
  {
    "objectID": "R_dataviz.html#align-axes",
    "href": "R_dataviz.html#align-axes",
    "title": "3  Data Viz",
    "section": "3.7 Align Axes",
    "text": "3.7 Align Axes\nSometimes I’m working on two different types of plots (like a bar chart and a scatter plot) that happen to have the same x-axis. I want to line up these axes so that when the plots are stacked the values correspond to the same date.\n\n3.7.1 gridExtra::grid.arrange() and cowplot::plot_grid()\n\n# two different bar charts\nA <- ggplot(mpg, aes(class))+geom_bar()+coord_flip()+ylim(0, 109)\nB <- ggplot(mpg, aes(drv))+geom_bar()+coord_flip()+ylim(0, 109)\n\nUsing grid.arrange command from the gridExtra package does not line up axes.\n\n#axes don't line up\ngridExtra::grid.arrange(A, B, ncol=1)\n\n\n\n\nUse grid.draw command from the grid package to left align graph edges .\n\n\nSource: Stack Overflow, Nov 2012 | left align two graph edges\n\nThe cowplot::plot_grid() function allows you to line up plots by a specific axis.\n\n#make plots into Grobs (grid graphical object)\ngA <- ggplotGrob(A) \ngB <- ggplotGrob(B)\ngrid::grid.draw(rbind(gA, gB))\ncowplot::plot_grid(A, B, ncol = 1, align = \"v\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.7.2 Mixed Geoms\nScatter plots and bar charts will not line up automatically, even when using the grid.draw/plot_grid command detailed above. This is because their default limits are different given that the bar chart is centered on the value and the scatter plot is a single point on the value.\n\n#work with smaller subset of economics (ggplot2)\nstartdate <- \"2014-06-01\"\neconomics_small <- economics %>%\n  filter(date >= as.Date(startdate)) %>%\n  arrange(date)\n\n\nA <- ggplot(economics_small, aes(date, unemploy))+\n  geom_bar(stat=\"identity\")+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)\nB <- ggplot(economics_small, aes(date, uempmed))+\n  geom_point()+geom_line()+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)\ngA <- ggplotGrob(A) \ngB <- ggplotGrob(B)\n#grid::grid.draw(rbind(gA, gB)) \ncowplot::plot_grid(A, B, ncol = 1, align = \"v\")\n\n\n\n\nIn order to line the up there a a couple of options.\n\n3.7.2.1 Fix xlim\nIf you make the limit the first x-value, the bar chart will not show up (remember it’s centered over the value).\n\nA <- ggplot(economics_small, aes(date, unemploy))+\n  geom_bar(stat=\"identity\")+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)+\n  xlim(as.Date(startdate), NA)\nB <- ggplot(economics_small, aes(date, uempmed))+\n  geom_point()+geom_line()+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)+\n  xlim(as.Date(startdate), NA)\ngA <- ggplotGrob(A) \n\nWarning: Removed 1 rows containing missing values (geom_bar).\n\ngB <- ggplotGrob(B)\n#grid::grid.draw(rbind(gA, gB))\ncowplot::plot_grid(A, B, ncol = 1, align = \"v\")\n\nWarning: Removed 1 rows containing missing values (geom_bar).\n\n\n\n\n\nThis can be fixed by adding a half unit to the x-axis (i.e. having the lower limit be half-unit lower than smallest x-value). In this case the unit is a month, so a half-unit would be ~15 days.\n\nHalfUnit <- .5*(economics_small$date[2] - economics_small$date[1])\nHalfUnit\n\nTime difference of 15 days\n\n\n\nA <- ggplot(economics_small, aes(date, unemploy))+\n  geom_bar(stat=\"identity\")+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)+\n  xlim(as.Date(startdate)-HalfUnit, NA)\nB <- ggplot(economics_small, aes(date, uempmed))+\n  geom_point()+geom_line()+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)+\n  xlim(as.Date(startdate)-HalfUnit, NA)\ngA <- ggplotGrob(A) \ngB <- ggplotGrob(B)\n#grid::grid.draw(rbind(gA, gB))\ncowplot::plot_grid(A, B, ncol = 1, align = \"v\")\n\n\n\n\n\n\n3.7.2.2 Shift Bar Chart\nBar charts are automatically centered over the x-value. Bar charts (and any geom object) can be shifted by using position - position_nudge()). The shift needs to be half a unit on the x-axis, again here it is monthly data so a half unit would be ~15 days.\n\n\nSource: Stack Overflow, Aug 2016 | shift geom bar right\n\n\nA <- ggplot(economics_small, aes(date, unemploy))+\n  geom_bar(stat=\"identity\", position = position_nudge(x = as.vector(HalfUnit)))+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)\nB <- ggplot(economics_small, aes(date, uempmed))+\n  geom_point()+geom_line()+\n  geom_vline(xintercept = as.Date(startdate), color=\"red\", size=2)\ngA <- ggplotGrob(A) \ngB <- ggplotGrob(B)\n#grid::grid.draw(rbind(gA, gB))\ncowplot::plot_grid(A, B, ncol = 1, align = \"v\")"
  },
  {
    "objectID": "R_dataviz.html#default-ggplot2",
    "href": "R_dataviz.html#default-ggplot2",
    "title": "3  Data Viz",
    "section": "3.8 Default ggplot2",
    "text": "3.8 Default ggplot2\n\n3.8.1 Colors\nDefault colors can be recreated using scales::hue_pal() and can be shown using scales::show_col()\n\nscales::show_col(scales::hue_pal()(4))\n\n\n\n\n\nSource: Statistics Globe | Extract Default Color Palette of ggplot2 R Package - Hex Codes"
  },
  {
    "objectID": "R_dataviz.html#geom-defaults",
    "href": "R_dataviz.html#geom-defaults",
    "title": "3  Data Viz",
    "section": "3.9 Geom Defaults",
    "text": "3.9 Geom Defaults\nLook up geom’s default aes using: GeomName$default_aes$\nExample: geom_text()\n\nGeomText$default_aes\n\nAesthetic mapping: \n* `colour`     -> \"black\"\n* `size`       -> 3.88\n* `angle`      -> 0\n* `hjust`      -> 0.5\n* `vjust`      -> 0.5\n* `alpha`      -> NA\n* `family`     -> \"\"\n* `fontface`   -> 1\n* `lineheight` -> 1.2"
  },
  {
    "objectID": "R_dataviz.html#links",
    "href": "R_dataviz.html#links",
    "title": "3  Data Viz",
    "section": "3.10 Links",
    "text": "3.10 Links\nnew sections\n\nStack Overflow | Consistently center ggplot title across PANEL not PLOT\nStack Overflow | customize ggplot2 axis labels with different colors\n\nshape/line in ggplot\n\nSAPE | ggplot2 Quick Reference: size\nSAPE | ggplot2 Quick Reference: shape\nAlbert’s Blog | Point Shape Options in ggplot\n\nlayout\n\nBaptiste Augie, Jul 2019 | Laying out multiple plots on a page\nDatanovia | How To Easily Customize GGPlot Legend for Great Graphics\nR project | tableGrob - Displaying tables as grid graphics\nStatistics Globe | Remove Border of ggplot2 geom_label Text Annotation in R\n{gridExtra}::tableGrob\n\nStack Overflow | ggplot2: change colour of font and background in facet strip?\n\nother\n\nGitHub nprapps/dailygraphics | dailygraphics-templates/index.html\nGitHub hrbrmstr/statebins | Alternative to choropleths of US States\nStack Overflow | Accents using ggplot2\nStack Overflow | How does ggplot scale_continuous expand argument work?\nR CHARTS | Slopegraph in ggplot2 with newggslopegraph"
  }
]