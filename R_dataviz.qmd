# Data Viz 

```{r}
#| message = FALSE 
library(tidyverse)
```


**Links**  


- [Stack Overflow | ggplot - Multiple legends arrangement](https://stackoverflow.com/questions/52060601/ggplot-multiple-legends-arrangement)
- [ggplot2 | 11 Colour scales and legends, scale color binned](https://ggplot2-book.org/scale-colour.html)
- [R project | tableGrob - Displaying tables as grid graphics](https://cran.r-project.org/web/packages/gridExtra/vignettes/tableGrob.html)
- [Statistics Globe | Remove Border of ggplot2 geom_label Text Annotation in R](https://statisticsglobe.com/remove-border-of-ggplot2-geom_label-text-annotation-in-r)
- [Statistics Globe | Extract Default Color Palette of ggplot2 R Package - Hex Codes](https://statisticsglobe.com/identify-default-color-palette-names-of-ggplot2-in-r); `scales::hue_pal()` and `scales::show_col()`
- [{gridExtra}::tableGrob](https://www.rdocumentation.org/packages/gridExtra/versions/2.3/topics/tableGrob)
- [Stack Overflow | customize ggplot2 axis labels with different colors](https://stackoverflow.com/questions/38862303/customize-ggplot2-axis-labels-with-different-colors)
- [Stack Overflow | Consistently center ggplot title across PANEL not PLOT](https://stackoverflow.com/questions/52469245/consistently-center-ggplot-title-across-panel-not-plot)
- [Stack Overflow | ggplot2: change colour of font and background in facet strip?](https://stackoverflow.com/questions/53455092/r-ggplot2-change-colour-of-font-and-background-in-facet-strip)
- [Stack Overflow | Accents using ggplot2](https://stackoverflow.com/questions/18972628/accents-using-ggplot2)
- [Stack Overflow | How does ggplot scale_continuous expand argument work?](https://stackoverflow.com/questions/44170871/how-does-ggplot-scale-continuous-expand-argument-work)
- [Stack Overflow | Using ggplot2, can I insert a break in the axis?](https://stackoverflow.com/questions/7194688/using-ggplot2-can-i-insert-a-break-in-the-axis)
- [Set Axis Break for ggplot2](https://mran.microsoft.com/web/packages/ggbreak/vignettes/ggbreak.html)
- [{cowplot}::add_sub | Add annotation underneath a plot](https://wilkelab.org/cowplot/reference/add_sub.html)
- [R CHARTS | Slopegraph in ggplot2 with newggslopegraph](https://r-charts.com/evolution/newggslopegraph/)

- [Stack Overflow | Add ggplot annotation outside the panel? Or two titles?](https://stackoverflow.com/questions/21997715/add-ggplot-annotation-outside-the-panel-or-two-titles)


## Secondary Legend

### NA Legend 

Added automatically if NA is part of discrete legend, but is NOT included automatically for continuous legend.  

```{r}
#| fig.height: 3
set.seed(20220713)
states_sf <- urbnmapr::get_urbn_map(map = "states", sf = TRUE) %>% 
  #set new CRS 
  sf::st_transform(states_sf, crs = 4326) %>% 
  mutate(
      val_dis = sample(c("A", "B", "C"), nrow(.), TRUE)
    , val_con = sample(-50:50          , nrow(.), TRUE)
  ) %>% 
  mutate(
      val_dis = ifelse(state_abbv == "MN", NA, val_dis)
    , val_con = ifelse(state_abbv == "MN", NA, val_con)
  )

ggplot(states_sf) + geom_sf(aes(fill = val_dis))
ggplot(states_sf) + geom_sf(aes(fill = val_con))
```

Add `NA` legend to continuous plot: 

```{r}
#| fig.height = 3
ggplot(states_sf) + 
  geom_sf(aes(fill = val_con, color = "")) + 
  scale_fill_continuous(na.value = "grey40") + 
  scale_color_manual(values = NA) + 
  guides(
      color = guide_legend("NA", override.aes = list(fill = "grey40"))
    , fill = guide_colorbar(order = 1)
  ) 
```
<div class="source">
Source: [Stack Overflow, Mar 2017](https://stackoverflow.com/questions/42365483/add-a-box-for-the-na-values-to-the-ggplot-legend-for-a-continous-map)
</div>

### 2+ Special Values 

```{r}
#| fig.height = 3
library(cowplot) 

#special value for 'suppressed' data
states_sf <- states_sf %>% 
  mutate(val_con = ifelse(state_abbv == "CA", 999, val_con))

## Main Plot 
p.main <- ggplot(states_sf) + 
  geom_sf( # non-special values, typical cont. color bar 
    data = filter(states_sf, val_con != 999 & !is.na(val_con))
    , aes(fill = val_con), color = NA
  ) + 
  geom_sf( # NA states (missing data) 
    data = filter(states_sf, is.na(val_con))
    , fill = "grey30", color = NA
  ) + 
  geom_sf( # Special values (suppressed data) 
    data = filter(states_sf, val_con == 999)
    , fill = "grey80", color = NA
  ) + 
  geom_sf( # add borders for all 
    fill = NA, color = "white"
  ) 

## Dummy Plot for 2nd Legend 
p.missup <- tibble(val = c(0, 1), type = c("Missing", "Suppressed")) %>% 
  ggplot() + 
  geom_bar(aes(val, fill = type)) + 
  scale_fill_manual(name = NULL
    , values = c("grey30", "grey80")
    , guide = guide_legend( byrow = TRUE)
  ) + 
  theme(legend.spacing.y = unit(5, "pt"))

## Pull out legends and combine 
leg.main <- cowplot::get_legend(p.main)
leg.sec  <- cowplot::get_legend(p.missup)
leg.final <- cowplot::plot_grid(leg.main, leg.sec, ncol = 1, align = "v") 

## Remvoe main legend from plot 
p.final  <- p.main  + theme(legend.position = "none") 

## Combined everything 
cowplot::plot_grid(p.final, leg.final, nrow = 1, rel_widths = c(4, 1))
```
**OUTSTANDING** 

- how to minimize space between main legend and secondary legend
- `grid::grid.draw(rbind(leg.main, leg.sec))` binds together without huge space, but need to figure out how to add to another ggplot item 

## hjust/vjust
Why do I always forget the direction of these? 

**hjust:** 0 = left-aligned, 0.5=center, 1 = right-aligned  
**vjust:** 0 = top-aligned, 0.5=middle, 1 = bottom-aligned  

```{r}
hjustvjust <- expand.grid(
  hjust=c(0, 0.5, 1),
  vjust=c(0, 0.5, 1),
  angle=c(0, 45, 90),
  text="TEXT")

ggplot(hjustvjust, aes(x=hjust, y=vjust)) + 
  geom_point() +
  geom_text(aes(label=text, angle=angle, hjust=hjust, vjust=vjust)) + 
  facet_grid(~angle) +
  scale_x_continuous(breaks=c(0, 0.5, 1), expand=c(0, 0.2)) +
  scale_y_continuous(breaks=c(0, 0.5, 1), expand=c(0, 0.2)) + 
  labs(
    title="Various values of angle, hjust and vjust in ggplot \n"
    , y ="vjust \n"
    , x =" \n hjust"
  ) +  
  theme_bw() + 
  theme(
    axis.text  = element_text(color="black", face="bold" , size=12)
  , axis.title = element_text(color="black", face="plain", size=24)
  , plot.title = element_text(color="black", face="bold" , size=18)
  ) 
```
<div class="source">
Sources: [R bloggers: hjust and vjust](https://www.r-bloggers.com/hjust-and-vjust/) and [GitHub: cdesante/hjustvjust.r](https://gist.github.com/cdesante/4070548)
</div>

## Math Expressions 

### Use `quote()` 
```{r}
ggplot(mpg, aes(displ, hwy))+geom_point()+
  ggtitle(
    quote(
      alpha ^ 2 - frac(1, 10) + sum(n[i], i==1, N)
    ) #end quote
  ) #end of ggtitle
```

### Use `TeX()` from the `latex2exp` package  
- must be in a string
- must be denoted as math mode with dollar signs
- must include **2** backslashes for $\LaTeX$ commands 
```{r}
library(latex2exp)
ggplot(mpg, aes(displ, hwy))+geom_point()+
  ggtitle(TeX(
    "$\\alpha^2 - \\frac{1}{10} + \\sum_{i}^N n_i$"
    ) #end TeX
  ) #end ggtitle
```
## Facets: scales/space

Another option is `facet_wrap()` or `facet_grid()`, which can works  if the axes are the same for the different variables you want to compare, but be careful as facets are supposed to be comparing items with the same measurements.  

```{r}
tidy.df <- tidyr::pivot_longer(
  mpg, c(class, drv)
  , names_to = "category"
  , values_to = "type"
)
```


`scales = "free"`: removes types from the axis if that category has 0 cars of that type   

```{r}
#| column: screen-inset-shaded
#| layout-nrow: 1
ggplot(tidy.df, aes(type)) +
  geom_bar() + coord_flip() + 
  facet_wrap(~category,  ncol = 1, scales = "fixed") + 
  labs(title = 'facet_wrap: scales = "fixed"')

ggplot(tidy.df, aes(type)) +
  geom_bar() + coord_flip() + 
  facet_wrap(~category,  ncol = 1, scales = "free") + 
  labs(title = 'facet_wrap: scales = "free"')
```

`space = "free"`: spaces based on number of obs (i.e. number of bars); rather than giving each facet equal sizing, **ONLY** available for `facet_grid`

```{r}
#| column: screen-inset-shaded
#| layout-nrow: 1
ggplot(tidy.df, aes(type)) +
  geom_bar() + coord_flip() + 
  facet_grid(category ~ ., scales = "fixed" , space  = "fixed") + 
  labs(title = 'facet_grid: scales = "fixed" and space = "fixed"')

ggplot(tidy.df, aes(type)) +
  geom_bar() + coord_flip() + 
  facet_grid(category ~ ., scales = "free" , space  = "free") + 
  labs(title = 'facet_grid: scales = "free" and space = "free"')
```


## Align Axes
Sometimes I'm working on two different types of plots (like a bar chart and a scatter plot) that happen to have the same x-axis.  I want to line up these axes so that when the plots are stacked the values correspond to the same date.  


### `gridExtra::grid.arrange()` and `cowplot::plot_grid()`
```{r}
# two different bar charts
A <- ggplot(mpg, aes(class))+geom_bar()+coord_flip()+ylim(0, 109)
B <- ggplot(mpg, aes(drv))+geom_bar()+coord_flip()+ylim(0, 109)
```

Using `grid.arrange` command from the `gridExtra` package does not line up axes.  
```{r}
#axes don't line up
gridExtra::grid.arrange(A, B, ncol=1)
```

Use `grid.draw` command from the `grid` package to left align graph edges .  
<div class = "source">
Source: [Stack Overflow, Nov 2012](https://stackoverflow.com/questions/13294952/left-align-two-graph-edges-ggplot)
</div>  

The `cowplot::plot_grid()` function allows you to line up plots by a specific axis.   
```{r}
#| column: screen-inset-shaded
#| layout-nrow: 1
#make plots into Grobs (grid graphical object)
gA <- ggplotGrob(A) 
gB <- ggplotGrob(B)
grid::grid.draw(rbind(gA, gB))
cowplot::plot_grid(A, B, ncol = 1, align = "v")
```

### Mixed Geoms 
Scatter plots and bar charts will not line up automatically, even when using the `grid.draw`/`plot_grid` command detailed above.  This is because their default limits are different given that the bar chart is centered on the value and the scatter plot is a single point on the value.  

```{r}
#work with smaller subset of economics (ggplot2)
startdate <- "2014-06-01"
economics_small <- economics %>%
  filter(date >= as.Date(startdate)) %>%
  arrange(date)
```


```{r}
A <- ggplot(economics_small, aes(date, unemploy))+
  geom_bar(stat="identity")+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)
B <- ggplot(economics_small, aes(date, uempmed))+
  geom_point()+geom_line()+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)
gA <- ggplotGrob(A) 
gB <- ggplotGrob(B)
#grid::grid.draw(rbind(gA, gB)) 
cowplot::plot_grid(A, B, ncol = 1, align = "v")
```

In order to line the up there a a couple of options.  

#### Fix xlim

If you make the limit the first x-value, the bar chart will not show up (remember it's centered over the value).  
```{r}
A <- ggplot(economics_small, aes(date, unemploy))+
  geom_bar(stat="identity")+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)+
  xlim(as.Date(startdate), NA)
B <- ggplot(economics_small, aes(date, uempmed))+
  geom_point()+geom_line()+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)+
  xlim(as.Date(startdate), NA)
gA <- ggplotGrob(A) 
gB <- ggplotGrob(B)
#grid::grid.draw(rbind(gA, gB))
cowplot::plot_grid(A, B, ncol = 1, align = "v")
```

This can be fixed by adding a half unit to the x-axis (i.e. having the lower limit be half-unit lower than smallest x-value). In this case the unit is a month, so a half-unit would be ~15 days.  

```{r}
HalfUnit <- .5*(economics_small$date[2] - economics_small$date[1])
HalfUnit
```


```{r}
A <- ggplot(economics_small, aes(date, unemploy))+
  geom_bar(stat="identity")+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)+
  xlim(as.Date(startdate)-HalfUnit, NA)
B <- ggplot(economics_small, aes(date, uempmed))+
  geom_point()+geom_line()+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)+
  xlim(as.Date(startdate)-HalfUnit, NA)
gA <- ggplotGrob(A) 
gB <- ggplotGrob(B)
#grid::grid.draw(rbind(gA, gB))
cowplot::plot_grid(A, B, ncol = 1, align = "v")
```

#### Shift Bar Chart
Bar charts are automatically centered over the x-value.  Bar charts (and any geom object) can be shifted by using `position - position_nudge())`.  The shift needs to be half a unit on the x-axis, again here it is monthly data so a half unit would be ~15 days.  
<div class="source">
Source: [Stack Overflow, Aug 2016](https://stackoverflow.com/questions/38752968/shift-geom-bar-right-not-center-aligned)
</div>

```{r}
A <- ggplot(economics_small, aes(date, unemploy))+
  geom_bar(stat="identity", position = position_nudge(x = as.vector(HalfUnit)))+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)
B <- ggplot(economics_small, aes(date, uempmed))+
  geom_point()+geom_line()+
  geom_vline(xintercept = as.Date(startdate), color="red", size=2)
gA <- ggplotGrob(A) 
gB <- ggplotGrob(B)
#grid::grid.draw(rbind(gA, gB))
cowplot::plot_grid(A, B, ncol = 1, align = "v")
```


## Links 

- [Baptiste Augie, Jul 2019 | Laying out multiple plots on a page](https://cran.r-project.org/web/packages/egg/vignettes/Ecosystem.html)
- [GitHub nprapps/dailygraphics | dailygraphics-templates/index.html](https://github.com/nprapps/dailygraphics-templates/blob/master/state_grid_map/index.html) 
- [SAPE | ggplot2 Quick Reference: size](http://sape.inf.usi.ch/quick-reference/ggplot2/size)
- [Datanovia | How To Easily Customize GGPlot Legend for Great Graphics](https://www.datanovia.com/en/blog/ggplot-legend-title-position-and-labels/)
- [Albert's Blog | Point Shape Options in ggplot](https://blog.albertkuo.me/post/point-shape-options-in-ggplot/)  
- [GitHub hrbrmstr/statebins | Alternative to choropleths of US States](https://github.com/hrbrmstr/statebins)
